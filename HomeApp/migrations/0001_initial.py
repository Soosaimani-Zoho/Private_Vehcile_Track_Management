# Generated by Django 5.0.4 on 2024-04-25 10:48

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='CountryCodeDetails',
            fields=[
                ('countryname', models.CharField(max_length=25, verbose_name='Vendor Country Name')),
                ('countrycode', models.IntegerField(primary_key=True, serialize=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(9999)], verbose_name='Country Code')),
            ],
        ),
        migrations.CreateModel(
            name='GPSDeviceDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deviceserialno', models.CharField(max_length=50, unique=True, verbose_name='GPSDevice Serial No')),
                ('installedat', models.DateTimeField(auto_now=True, verbose_name='GPSDevice Installed Date')),
                ('expiredat', models.DateTimeField(verbose_name='GPSDevice Expirty Date')),
            ],
        ),
        migrations.CreateModel(
            name='VehicleDetails',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vehiclename', models.CharField(max_length=50, verbose_name='Vehicle Name')),
                ('vehicleregno', models.CharField(max_length=50, unique=True, verbose_name='Vehicle Reg No')),
                ('vehicletype', models.CharField(max_length=50, verbose_name='Vehicle Type')),
                ('vehicleimage', models.ImageField(upload_to=None, verbose_name='Vehicle Image')),
                ('odometerreading', models.IntegerField(verbose_name='Vehicle Odometer Reading')),
                ('modelyear', models.IntegerField(verbose_name='Vehicle Model Year')),
                ('chessisno', models.CharField(max_length=50, verbose_name='Vehicle Chassis No')),
                ('expectmileage', models.IntegerField(verbose_name='Expected Mileage')),
            ],
        ),
        migrations.CreateModel(
            name='vehiclefueltype',
            fields=[
                ('fueltype', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Vehicle Make')),
            ],
        ),
        migrations.CreateModel(
            name='vehiclemake',
            fields=[
                ('vehiclemake', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Vehicle Make')),
            ],
        ),
        migrations.CreateModel(
            name='GPSDeviceStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('moving', models.BooleanField(verbose_name='GPS Device Move Status')),
                ('stopped', models.BooleanField(verbose_name='GPS Device Stopped Status')),
                ('idlling', models.BooleanField(verbose_name='GPS Device Idlling Status')),
                ('offline', models.BooleanField(verbose_name='GPS Device Offline Status')),
                ('subsexpired', models.BooleanField(verbose_name='GPS Device Subscription Expiry Status')),
                ('ignition', models.BooleanField(verbose_name='GPS Device Ignition Status')),
                ('gpssignal', models.CharField(max_length=50, verbose_name='GPS Signal Status')),
                ('speed', models.IntegerField(verbose_name='GPS Device Speed')),
                ('orientationvalue', models.IntegerField(verbose_name='GPS Device Orientation value')),
                ('deviceexternalpower', models.BooleanField(verbose_name='GPS Device External Power Status')),
                ('location', models.TextField(verbose_name='GPS Device Location')),
                ('temperature', models.IntegerField(verbose_name='GPS Device temperature')),
                ('internalbatterypower', models.IntegerField(verbose_name='GPS Device Internal Battery Power')),
                ('movmentvalue', models.IntegerField(verbose_name='GPS Device Movement Value')),
                ('gsmstrength', models.FloatField(verbose_name='GPS Device GSM Strength')),
                ('lat', models.FloatField(verbose_name='GPS Device Latitude')),
                ('long', models.FloatField(verbose_name='GPS Device Longitude')),
                ('deviceserialno', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='HomeApp.gpsdevicedetails')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bio', models.TextField(blank=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='gpsdevicedetails',
            name='vehiclename',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='HomeApp.vehicledetails'),
        ),
        migrations.AddField(
            model_name='vehicledetails',
            name='vehiclemake',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='HomeApp.vehiclemake'),
        ),
        migrations.CreateModel(
            name='VendorProfile',
            fields=[
                ('vendorname', models.CharField(max_length=50, verbose_name='Vendor name')),
                ('vendorid', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Vendor ID')),
                ('vendoraddress', models.TextField(verbose_name='Vendor Address')),
                ('vendormob1', models.IntegerField(unique=True, verbose_name='Vendor Mobile no_1')),
                ('vendormob2', models.IntegerField(verbose_name='Vendor Mobile no_2')),
                ('vendordistrict', models.CharField(max_length=50, verbose_name='Vendor District')),
                ('isactive', models.BooleanField(verbose_name=' Active or Not')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='HomeApp.userprofile')),
                ('vendorcountry', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HomeApp.countrycodedetails')),
            ],
        ),
        migrations.AddField(
            model_name='vehicledetails',
            name='vendorid',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='HomeApp.vendorprofile'),
        ),
    ]
